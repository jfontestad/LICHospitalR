% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_ma_plt.R
\name{ts_ma_plt}
\alias{ts_ma_plt}
\title{Time Series Moving Average Plot}
\usage{
ts_ma_plt(
  .data,
  .date_col,
  .value_col,
  .ts_frequency = "monthly",
  .main_title = NULL,
  .secondary_title = NULL,
  .tertiary_title = NULL
)
}
\arguments{
\item{.data}{The data you want to visualize. This should be pre-processed and
the aggregation should match the \code{.frequency} argument.}

\item{.date_col}{The data column from the \code{.data} argument.}

\item{.value_col}{The value column from the \code{.data} argument}

\item{.ts_frequency}{The frequency of the aggregation, quoted, ie. "monthly", anything else
will default to weekly, so it is very important that the data passed to this
function be in either a weekly or monthly aggregation.}

\item{.main_title}{The title of the main plot.}

\item{.secondary_title}{The title of the second plot.}

\item{.tertiary_title}{The title of the third plot.}
}
\value{
The original time series, the simulated values and a some plots
}
\description{
This function will produce two plots. Both of these are moving average plots.
One of the plots is from \code{\link[xts:plot.xts]{xts::plot.xts()}} and the other a \code{ggplot2} plot. This
is done so that the user can choose which type is best for them. The plots are
stacked so each graph is on top of the other.
}
\details{
This function expects to take in a data.frame/tibble. It will return
a list object so it is a good idea to save the output to a variable and extract
from there.
}
\examples{
suppressPackageStartupMessages(library(timetk))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(tidyquant))
suppressPackageStartupMessages(library(xts))
suppressPackageStartupMessages(library(cowplot))
suppressPackageStartupMessages(library(healthyR.data))

data_tbl <- healthyR_data \%>\%
  select(visit_end_date_time) \%>\%
  summarise_by_time(
    .date_var = visit_end_date_time,
    .by       = "month",
    value     = n()
  ) \%>\%
  set_names("date_col","value")

ts_ma_plt(
  .data = data_tbl,
  .date_col = date_col,
  .value_col = value
)

data_tbl <- healthyR_data \%>\%
  select(visit_end_date_time) \%>\%
  summarise_by_time(
    .date_var = visit_end_date_time,
    .by = "week",
    value = n()
  ) \%>\%
  set_names("date_col","value")

ts_ma_plt(
  .data = data_tbl,
  .date_col = date_col,
  .value_col = value,
  .ts_frequency = "week"
)

}
\author{
Steven P. Sanderson II, MPH
}
